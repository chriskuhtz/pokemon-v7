import { getTimeOfDay } from '../../../functions/getTimeOfDay';
import { getTraveller } from '../../../functions/getTraveller';
import { OverworldMap } from '../../../interfaces/OverworldMap';
import { SpriteEnum } from '../../../interfaces/SpriteEnum';
import { routeW1Lure } from '../../../modules/BerryLure/BerryLure';
import { gary } from './gary';

export const routeW1Occupants: OverworldMap['occupants'] = [
	{
		type: 'ON_STEP_PORTAL',
		x: 25,
		y: 0,
		portal: {
			mapId: 'routeN1W1',
			x: 25,
			y: 49,
			orientation: 'UP',
			forwardFoot: 'CENTER1',
		},
		conditionFunction: () => true,
		id: 'routeW1_to_routeN1W1',
	},
	{
		type: 'NPC',
		x: 25,
		y: 1,
		orientation: 'DOWN',
		unhandledMessage: [
			'Not so fast, big dog',
			'Cant let anyone through without proper equipment',
			"Shit's gnarly up there, brother",
		],
		sprite: SpriteEnum.snowboarder,
		conditionFunction: (s) => !s.campUpgrades['buy skiing equipment'],
		id: 'ski-blocker',
	},
	{
		type: 'ON_STEP_PORTAL',
		x: 25,
		y: 50,
		portal: {
			mapId: 'routeS1W1',
			y: 1,
			x: 25,
			orientation: 'DOWN',
			forwardFoot: 'CENTER1',
		},
		conditionFunction: () => true,
		id: 'routeN1W1_to_routeS1W1',
	},
	{
		type: 'ON_STEP_PORTAL',
		x: 37,
		y: 50,
		portal: {
			mapId: 'routeS1W1',
			y: 1,
			x: 37,
			orientation: 'DOWN',
			forwardFoot: 'CENTER1',
		},
		conditionFunction: () => true,
		id: 'routeN1W1_to_routeS1W1',
	},
	{
		type: 'ON_STEP_PORTAL',
		x: 38,
		y: 50,
		portal: {
			mapId: 'routeS1W1',
			y: 1,
			x: 38,
			orientation: 'DOWN',
			forwardFoot: 'CENTER1',
		},
		conditionFunction: () => true,
		id: 'routeN1W1_to_routeS1W1',
	},
	{
		type: 'ON_STEP_PORTAL',
		x: 39,
		y: 50,
		portal: {
			mapId: 'routeS1W1',
			y: 1,
			x: 39,
			orientation: 'DOWN',
			forwardFoot: 'CENTER1',
		},
		conditionFunction: () => true,
		id: 'routeN1W1_to_routeS1W1',
	},
	{
		type: 'ON_STEP_PORTAL',
		x: 50,
		y: 39,
		portal: {
			mapId: 'camp',
			y: 30,
			x: 1,
			orientation: 'RIGHT',
			forwardFoot: 'CENTER1',
		},
		conditionFunction: () => true,
		id: 'routeW1_camp',
	},
	{
		type: 'STRANGE_TREE',
		x: 49,
		y: 40,
		conditionFunction: (s) =>
			!s.handledOccupants.some((h) => h.id === 'sudowoodo'),
		id: 'sudowoodo',
		orientation: 'UP',
	},
	{
		type: 'ON_STEP_PORTAL',
		id: 'cave1 entry bottom',
		conditionFunction: () => true,
		x: 28,
		y: 47,
		portal: {
			mapId: 'caveW1',
			x: 28,
			y: 46,
			orientation: 'UP',
			forwardFoot: 'CENTER1',
		},
	},
	{
		type: 'ON_STEP_PORTAL',
		id: 'cave1F1 entry middle',
		conditionFunction: () => true,
		x: 3,
		y: 26,
		portal: {
			mapId: 'caveW1F1',
			x: 3,
			y: 25,
			orientation: 'RIGHT',
			forwardFoot: 'CENTER1',
		},
	},
	{
		type: 'ON_STEP_PORTAL',
		id: 'cave1F1 waterfall entry',
		conditionFunction: () => true,
		x: 27,
		y: 36,
		portal: {
			mapId: 'caveW1F1',
			x: 27,
			y: 35,
			orientation: 'UP',
			forwardFoot: 'CENTER1',
		},
	},
	{
		type: 'ON_STEP_PORTAL',
		id: 'cave1F1 waterfall entry',
		conditionFunction: () => true,
		x: 28,
		y: 36,
		portal: {
			mapId: 'caveW1F1',
			x: 28,
			y: 35,
			orientation: 'UP',
			forwardFoot: 'CENTER1',
		},
	},
	{
		type: 'ON_STEP_PORTAL',
		id: 'cave1 entry middle',
		conditionFunction: () => true,
		x: 2,
		y: 36,
		portal: {
			mapId: 'caveW1',
			x: 3,
			y: 36,
			orientation: 'RIGHT',
			forwardFoot: 'CENTER1',
		},
	},
	{
		type: 'ON_STEP_PORTAL',
		id: 'cave1F2 entry middle hole',
		conditionFunction: () => true,
		x: 35,
		y: 20,
		portal: {
			mapId: 'caveW1F2',
			x: 35,
			y: 18,
			orientation: 'DOWN',
			forwardFoot: 'CENTER1',
		},
	},
	{
		type: 'ON_STEP_PORTAL',
		id: 'cave1F2 entry trainer',
		conditionFunction: () => true,
		x: 6,
		y: 17,
		portal: {
			mapId: 'caveW1F2',
			x: 6,
			y: 16,
			orientation: 'DOWN',
			forwardFoot: 'CENTER1',
		},
	},
	{
		type: 'ON_STEP_PORTAL',
		id: 'cave1F2 entry top',
		conditionFunction: () => true,
		x: 23,
		y: 2,
		portal: {
			mapId: 'caveW1F2',
			x: 22,
			y: 2,
			orientation: 'DOWN',
			forwardFoot: 'CENTER1',
		},
	},
	{
		type: 'ITEM',
		x: 23,
		y: 47,
		item: 'escape-rope',
		amount: 5,
		conditionFunction: (s) =>
			!s.handledOccupants.some((h) => h.id === 'routeW1-escape-ropes'),
		id: 'routeW1-escape-ropes',
	},
	...gary,

	{
		type: 'POKEMON',
		x: 43,
		y: 33,
		orientation: 'DOWN',
		dexId: 245,
		encounter: {
			name: 'suicune',
			maxXp: 125000,
			minXp: 125000,
			rarity: 'common',
		},
		dialogue: ['Suiii'],
		conditionFunction: (s) =>
			s.pokedex.suicune.caughtOnRoutes.length === 0 &&
			getTimeOfDay() === 'EVENING',
		id: 'routeW1_suicune',
	},
	{
		type: 'ITEM',
		x: 39,
		y: 19,
		item: 'fire-stone',
		amount: 1,
		conditionFunction: (s) =>
			!s.handledOccupants.some((h) => h.id === 'routeW1-fire-stone'),
		id: 'routeW1-fire-stone',
	},
	{
		type: 'ITEM',
		x: 9,
		y: 27,
		item: 'plume-fossil',
		amount: 1,
		conditionFunction: (s) =>
			!s.handledOccupants.some((h) => h.id === 'routeW1-plume-fossil'),
		id: 'routeW1-plume-fossil',
	},
	{
		type: 'ITEM',
		x: 9,
		y: 8,
		item: 'rage-candy-bar',
		amount: 2,
		conditionFunction: (s) =>
			!s.handledOccupants.some((h) => h.id === 'routeW1-rage-candy-bar'),
		id: 'routeW1-rage-candy-bar',
	},
	routeW1Lure,
	{
		type: 'CLIMBING_STEPS',
		x: 21,
		y: 40,
		conditionFunction: () => true,
		id: 'climbing-steps-routeW1-1',
	},
	{
		type: 'CLIMBING_STEPS',
		x: 21,
		y: 41,
		conditionFunction: () => true,
		id: 'climbing-steps-routeW1-2',
	},
	{
		type: 'CLIMBING_STEPS',
		x: 21,
		y: 42,
		conditionFunction: () => true,
		id: 'climbing-steps-routeW1-3',
	},
	{
		type: 'CLIMBING_STEPS',
		x: 8,
		y: 5,
		conditionFunction: () => true,
		id: 'climbing-steps-routeW1-3',
	},
	{
		type: 'CLIMBING_STEPS',
		x: 8,
		y: 6,
		conditionFunction: () => true,
		id: 'climbing-steps-routeW1-3',
	},
	{
		type: 'CLIMBING_STEPS',
		x: 16,
		y: 17,
		conditionFunction: () => true,
		id: 'climbing-steps-routeW1-3',
	},
	{
		type: 'CLIMBING_STEPS',
		x: 16,
		y: 18,
		conditionFunction: () => true,
		id: 'climbing-steps-routeW1-3',
	},
	{
		type: 'CLIMBING_STEPS',
		x: 16,
		y: 19,
		conditionFunction: () => true,
		id: 'climbing-steps-routeW1-3',
	},
	...getTraveller('routeW1'),
];
