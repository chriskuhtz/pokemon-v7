import { OverworldMap } from '../../../interfaces/OverworldMap';

export const routeE1Occupants: OverworldMap['occupants'] = [
	{
		type: 'ON_STEP_PORTAL',
		x: 25,
		y: 0,
		portal: {
			mapId: 'routeN1E1',
			x: 25,
			y: 49,
			orientation: 'UP',
			forwardFoot: 'CENTER1',
		},
		conditionFunction: () => true,
		id: 'routeE1_to_routeN1E1',
	},
	{
		type: 'ON_STEP_PORTAL',
		x: 25,
		y: 50,
		portal: {
			mapId: 'routeS1E1',
			y: 1,
			x: 25,
			orientation: 'DOWN',
			forwardFoot: 'CENTER1',
		},
		conditionFunction: () => true,
		id: 'routeE1_to_routeS1E1',
	},
	{
		type: 'ON_STEP_PORTAL',
		x: 0,
		y: 25,
		portal: {
			mapId: 'camp',
			y: 10,
			x: 18,
			orientation: 'LEFT',
			forwardFoot: 'CENTER1',
		},
		conditionFunction: () => true,
		id: 'routeE1_to_camp',
	},
	{
		type: 'LEDGE',
		x: 1,
		y: 24,
		conditionFunction: () => true,
		id: 'ledge1',
		sprite: '/ledges/ledgeDown.png',
		passableFrom: 'UP',
	},
	{
		type: 'LEDGE',
		x: 2,
		y: 24,
		conditionFunction: () => true,
		id: 'ledge2',
		sprite: '/ledges/ledgeInnerCornerLeft.png',
	},
	{
		type: 'LEDGE',
		x: 2,
		y: 25,
		conditionFunction: () => true,
		id: 'ledge3',
		sprite: '/ledges/ledgeLeft.png',
		passableFrom: 'RIGHT',
	},
	{
		type: 'LEDGE',
		x: 2,
		y: 26,
		conditionFunction: () => true,
		id: 'ledge4',
		sprite: '/ledges/ledgeInnerCornerLeftBottom.png',
	},
	{
		type: 'LEDGE',
		x: 1,
		y: 26,
		conditionFunction: () => true,
		id: 'ledge5',
		sprite: '/ledges/ledgeUp.png',
		passableFrom: 'DOWN',
	},
	{
		type: 'LEDGE',
		x: 24,
		y: 2,
		conditionFunction: () => true,
		id: 'ledge6',
		sprite: '/ledges/ledgeEndBottomLeft.png',
	},
	{
		type: 'LEDGE',
		x: 25,
		y: 2,
		conditionFunction: () => true,
		id: 'ledge7',
		sprite: '/ledges/ledgeDown.png',
		passableFrom: 'UP',
	},
	{
		type: 'LEDGE',
		x: 26,
		y: 2,
		conditionFunction: () => true,
		id: 'ledge8',
		sprite: '/ledges/ledgeEndBottomRight.png',
	},
	{
		y: 49,
		x: 25,
		type: 'POKEMON',
		orientation: 'DOWN',
		id: 'snorlax-blocker',
		dexId: 143,
		conditionFunction: () => true,
		dialogue: ['..ZZ..', '.ZZZ...', '...ZZZ.'],
	},
];
